apiVersion: v1
kind: Service
metadata:
  name: cache
  namespace: sol
spec:
  ports:
  - port: 6379
  selector:
    app: cache

---
apiVersion: v1
kind: Service
metadata:
  name: cache-cluster
  namespace: sol
spec:
  clusterIP: None
  ports:
  - name: redis
    port: 6379
  - name: bus
    port: 16379
  selector:
    app: cache

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cache-conf
  namespace: sol
data:
  redis.conf: |
    protected-mode no
    cluster-enabled yes

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cache
  namespace: sol
spec:
  serviceName: cache-cluster
  replicas: 6
  selector:
    matchLabels:
      app: cache
  template:
    metadata:
      labels:
        app: cache
        backend: app
    spec:
      containers:
      - name: cache
        image: redis:alpine
        ports:
        - containerPort: 6379
        - containerPort: 16379
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
        volumeMounts:
        - name: data
          mountPath: /data
        - name: conf
          mountPath: /usr/local/etc/redis
      initContainers:
      - name: init
        image: busybox:latest
        command:
        - sh
        - "-c"
        - |
          set -eux
          cp /root/redis/redis.conf /usr/local/etc/redis/redis.conf
          echo "cluster-announce-ip cache-${HOSTNAME##*-}.cache-cluster.sol.svc.cluster.local" >> /usr/local/etc/redis/redis.conf
        volumeMounts:
        - name: conf
          mountPath: /usr/local/etc/redis
        - name: conf-map
          mountPath: /root/redis
      volumes:
      - name: conf
        emptyDir: {}
      - name: conf-map
        configMap:
          name: cache-conf
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 64Ki

---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-cache
  namespace: sol
spec:
  template:
    spec:
      containers:
      - name: init-cache
        image: redis:alpine
        command:
        - sh
        - "-c"
        - |
          redis-cli --cluster create \
          $(cat /root/redis/info.txt) \
          --cluster-replicas 1 \
          --cluster-yes
        volumeMounts:
        - name: info
          mountPath: /root/redis
      initContainers:
      - name: wait
        image: chenzhe0722/sol:wait
        command:
        - sh
        - "-c"
        - |
          set -eux
          echo "" > /root/redis/info.txt
          for i in $(seq 0 5); do
            wait-for -t 5 "cache-${i}.cache-cluster.sol.svc.cluster.local:6379"
            nslookup -type=a "cache-${i}.cache-cluster.sol.svc.cluster.local" \
              | sed -n '/Name/{n;p;}' \
              | head -n 1 \
              | awk '{printf "%s:6379 ", $2}' >> /root/redis/info.txt
          done
          sed -i 's/ $//' /root/redis/info.txt
        volumeMounts:
        - name: info
          mountPath: /root/redis
      volumes:
      - name: info
        emptyDir: {}
      restartPolicy: OnFailure
